name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: "27 19 * * *"
  push:
    branches: ["main"]
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
  pull_request:
    branches: ["main"]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ vars.DOCKER_USER }}/PHPUtils

jobs:
  make-matrix:
    runs-on: ubuntu-latest
    outputs:
      php-versions: ${{steps.fetch.outputs.json}}
    steps:
      - name: fetch versions
        id: fetch
        run: |
          echo -n "json=" >> "$GITHUB_OUTPUT"
          curl -cv https://www.php.net/releases/index.php?json \
            | jq -c 'reduce .[].supported_versions as $item ([];. + $item)' \
            >> "$GITHUB_OUTPUT"

  build:
    runs-on: ubuntu-latest
    needs: [make-matrix]
    strategy:
      fail-fast: false
      matrix:
        version: ${{fromJson(needs.make-matrix.outputs.php-versions)}}
        type: [cli, apache, fpm]
        repo:
          - name: "docker.io"
            repo: "borrel01/phputils"
            username: ${{ vars.DOCKER_USER }}
            secret: DOCKER_KEY
          - name: ghcr.io
            repo: "Borrel/PHPUtils"
            username: ${{ github.repository_owner }}
            secret: GITHUB_TOKEN
    name: php:${{ matrix.version }}-${{matrix.type}}
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@4959ce089c160fddf62f7b42464195ba1a56d382 # v3.6.0
        with:
          cosign-release: "v2.2.4"

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ matrix.repo.name }}
          username: ${{ matrix.repo.username }}
          password: ${{ secrets[matrix.repo.secret] }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          context: .
          pull: true
          push: ${{ github.event_name != 'pull_request' }}
          tags: matrix.repo.reop:${{ matrix.version }}-${{matrix.type}}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ matrix.version }}
            FLAVOR=${{ matrix.type }}

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: |
            borrel01/phputils:${{ matrix.version }}-${{matrix.type}}
            ghcr.io/borrel/phputils:${{ matrix.version }}-${{matrix.type}}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: create Release file
        run: |
          echo PHPUtils >> Release.md
          echo PHPUtils >> Release.md
          echo PHPUtils >> Release.md
