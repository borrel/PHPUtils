name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: "27 19 * * *"
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  make-matrix:
    runs-on: ubuntu-latest
    outputs:
      php-versions: ${{ steps.fetch.outputs.supported }}
      json: ${{ steps.fetch.outputs.json }}
      latest: ${{ steps.fetch.outputs.latest }}
    steps:
      - name: fetch versions
        id: fetch
        run: |
          set -x

          echo -n "json=" >> "$GITHUB_OUTPUT"
          curl -cv --retry 3 https://www.php.net/releases/index.php?json | \
            tee /tmp/json >> "$GITHUB_OUTPUT"
          cat /tmp/json | jq
          echo -en "\nsupported=" >> "$GITHUB_OUTPUT"
          cat /tmp/json | \
            jq -c 'reduce .[].supported_versions as $item ([];. + $item)' \
            >> "$GITHUB_OUTPUT"
          echo -en "\nlatest=" >> "$GITHUB_OUTPUT"
          cat /tmp/json | \
            jq -c '.[keys | max].version | split(".") | ""+.[0]+"."+.[1]' \
            >> "$GITHUB_OUTPUT"
          echo >> "$GITHUB_OUTPUT"

  build-base:
    runs-on: ubuntu-latest
    needs: [make-matrix]
    strategy:
      fail-fast: false
      matrix:
        version: ${{ fromJson(needs.make-matrix.outputs.php-versions) }}
        type: [fpm]
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1
      - uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          context: .
          tags: baseimage:${{matrix.version}}
          outputs: type=docker,dest=/tmp/baseimage-${{matrix.version}}.tar
          file: base.Dockerfile
          cache-to: type=gha
          cache-from: type=gha

  build:
    runs-on: ubuntu-latest
    needs: [make-matrix, build-base]
    outputs:
      ids: ${{ steps.build-and-push.outputs.digest }}
    strategy:
      fail-fast: false
      matrix:
        version: ${{ fromJson(needs.make-matrix.outputs.php-versions) }}
        type: [cli, fpm]
        variant: [prod, dev]
    name: ${{ format('php:{0}-{1}-{2}', matrix.version, matrix.type, matrix.variant) }}
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1
      - uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0name: Login Docker
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        with:
          registry: docker.io
          username: borrel
          password: ${{ secrets.DOCKER_KEY }}

      - uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        with:
          registry: ghcr.io
          username: Borrel/PHPUtils
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: |
            docker.io/borrel/php
            ghcr.io/Borrel/PHPUtils
          tags: |
            type=raw,value=latest,enable=${{ matrix.version == fromJson(needs.make-matrix.outputs.latest) && (matrix.type == 'cli') && matrix.variant == 'prod'}}
            type=raw,value=${{matrix.type}},enable=${{ matrix.version == fromJson(needs.make-matrix.outputs.latest) && matrix.variant == 'prod' }}
            type=raw,value=${{matrix.type}}-latest,enable=${{ matrix.version == fromJson(needs.make-matrix.outputs.latest) && matrix.variant == 'prod'}}

            type=raw,value=${{matrix.type}}-latest-${{matrix.variant}},enable=${{(matrix.version == fromJson(needs.make-matrix.outputs.latest)) }}
            type=raw,value=${{matrix.type}}-${{matrix.variant}},enable=${{(matrix.version == fromJson(needs.make-matrix.outputs.latest)) }}

            type=raw,value=${{matrix.variant}},enable=${{(matrix.version == fromJson(needs.make-matrix.outputs.latest))  && (matrix.type == 'cli') }}

            type=raw,value=${{matrix.type}}-${{matrix.version}},enable=${{matrix.variant == 'prod'}}
            type=raw,value=${{matrix.type}}-${{matrix.version}}-${{matrix.variant}}

      - name: build and push
        id: build-and-push
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          context: .
          pull: false
          push: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main'}}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{matrix.variant}}.Dockerfile
          load: true
          cache-to: type=gha
          cache-from: type=gha
          build-args: |
            VERSION=${{ matrix.version }}
            FLAVOR=${{ matrix.type }}
            VARIANT=${{ matrix.variant}}

      - name: extract build info
        run: |
          docker create --name tmp docker.io/borrel/phputils:${{matrix.type}}-${{matrix.version}}-${{matrix.variant}}
          docker cp tmp:/README.md /tmp/README-${{matrix.type}}-${{matrix.version}}-${{matrix.variant}}.md
          cat /tmp/README-${{matrix.type}}-${{matrix.version}}-${{matrix.variant}}.md >> $GITHUB_STEP_SUMMARY
